{"version":3,"sources":["./src/app/shared/forgot-password/forgot-password.component.html","./src/app/shared/forgot-password/forgot-password.component.ts","./src/app/shared/login/login.component.html","./src/app/shared/login/login.component.ts","./src/app/shared/reset-password/reset-password.component.html","./src/app/shared/reset-password/reset-password.component.ts","./src/app/shared/shared-routing.module.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"shared-shared-module-ngfactory.js","sourcesContent":["<section class=\"login p-relative d-flex text-center bg-primary common-img-bg\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"login-card card-block auth-body mr-auto ml-auto\">\n\n                    <div class=\"auth-box\">\n                        <div class=\"text-center mb-3\">\n                            <img src=\"assets/images/dentswiftlogo.png\" alt=\"logo.png\" />\n                        </div>\n                        <div class=\"row\">\n\n\n                            <div class=\"col-12\">\n                                <h3 class=\"text-center text-primary\">Enter your Registered Email here</h3>\n\n                            </div>\n                            <div class=\"col-12 m-t-10\">\n                                <form class=\"w-100\" [formGroup]=\"forgotForm\">\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-addon\">\n                                          <i class=\"icofont icofont-email\"></i>\n                                        </span>\n                                        <input type=\"text\" placeholder=\"Enter Your Email ID\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                        </div>\n                                    </div>\n                                    <button type=\"submit\" (click)=\"onSub()\" class=\"btn btn-primary btn-md btn-block m-t-10 m-b-10\" >Send Link</button>\n                                </form>\n                            </div>\n\n                            <div class=\"col-12\">\n                                <h3 class=\"text-center text-primary\">\n                                    <span class=\"text-secondary fs-13 mt-1\"><a routerLink=\"/login\" class=\"text-primary\">Back to Sign in.</a></span>\n                                </h3>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</section>\n\n<div class=\"modal fade\" id=\"sendbox\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-sm\">\n        <div class=\"modal-content\">\n\n\n            <div><i class=\"fa fa-check\" style=\"font-size: 30px;\n          color: green;\" aria-hidden=\"true\"></i></div>\n            <h5 class=\"mt-4\">Link has been sent</h5>\n\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../service/authentication.service';\nimport { UtilsService } from '../../service/utils.service';\nimport { Router } from '@angular/router';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  forgotForm: FormGroup;\n  // forgotPassword:FormGroup;\n  submitted = false;\n  invalidEmail: boolean;\n  errorMessage: any;\n  toastr: any;\n\n  constructor( \n    private formBuilder: FormBuilder,\n    private api:AuthenticationService,\n    private utils:UtilsService,\n    private router: Router,) { }\n\n  ngOnInit() {\n    this.forgotForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      // password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.forgotForm.controls; }\n\n  // onSubmit() {\n  //   this.submitted = true;\n\n  //   // stop here if form is invalid\n  //   if (this.forgotForm.invalid) {\n  //     return;\n  //   }\n\n  //   // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.forgotForm.value))\n  // }\n\n    onSub(){\n    this.submitted=true;\n\n    // stop here if form is invalid\n    if(this.forgotForm.invalid){      \n      return;\n    }\n\n    this.utils.alert('', 'Link has been send Successfully');\n    this.router.navigate(['/reset-password']);\n       \n\n    // debugger\n    this.api.forgot(this.forgotForm.value.email_id).subscribe(\n      data=>{\n        // debugger\n        console.log(\":::::::::i am here\");\n        console.log(data);\n        \n        \n        $('#success-modal').modal('show');\n        setTimeout(function(){\n          $('#success-modal').modal('hide');          \n          localStorage.setItem('forgot', JSON.stringify(this.forgotPassword.value.email_id));\n        }, 2000);\n        setTimeout(function(){\n          this.successMessage = data['message']\n          this.router.navigateByUrl('/reset-password');\n        }, 1500);\n      },\n      error=>{\n        // console.log(\"error\");\n        \n        console.log(error);\n        this.invalidEmail = true\n        this.errorMessage = error.error.message\n        this.toastr.error(error.error.message);\n        // debugger\n      }\n      \n    )\n  }\n}","<section class=\"login p-relative d-flex text-center bg-primary common-img-bg\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class=\"login-card card-block auth-body mr-auto ml-auto\">\n          <div class=\"auth-box\">\n            <div class=\"text-center mb-3\" style=\"padding-left: 50px;\">\n              <a routerLink=\"/\" class=\"d-flex align-items-center\">\n                <img class=\"\" style=\"height: 60px;\" src=\"assets/images/dent-favicon.png\" alt=\"\">\n                <img class=\"img-fluid\" src=\"assets/images/dentswiftlogo.png\" alt=\"Logo\" />\n            </a>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12 m-t-10\">\n                <form\n                  class=\"w-100\"\n                  [formGroup]=\"loginForm\"\n                  (ngSubmit)=\"onSubmit()\"\n                >\n                  <div class=\"input-group\">\n                    <span class=\"input-group-addon\">\n                      <i class=\"icofont icofont-email\"></i>\n                    </span>\n                    <input\n                      type=\"email\"\n                      placeholder=\"Enter Your Email ID\"\n                      formControlName=\"email\"\n                      class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                    />\n                    <div\n                      *ngIf=\"submitted && f.email.errors\"\n                      class=\"invalid-feedback\"\n                    >\n                      <div *ngIf=\"f.email.errors.required\">\n                        Email is required\n                      </div>\n                      <div *ngIf=\"f.email.errors.email\">\n                        Email must be a valid email address\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-addon\">\n                      <i class=\"icofont icofont-lock\"></i>\n                    </span>\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      formControlName=\"password\"\n                      class=\"form-control\"\n                      [ngClass]=\"{\n                        'is-invalid': submitted && f.password.errors\n                      }\"\n                    />\n                    <div\n                      *ngIf=\"submitted && f.password.errors\"\n                      class=\"invalid-feedback\"\n                    >\n                      <div *ngIf=\"f.password.errors.required\">\n                        Password is required\n                      </div>\n                      <div *ngIf=\"f.password.errors.minlength\">\n                        Password must be at least 8 characters\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"m-t-10 text-left\">\n                    <div class=\"checkbox-fade fade-in-primary d-\">\n                      <label>\n                        <input type=\"checkbox\" value=\"\" />\n                        <span class=\"cr\"\n                          ><i\n                            class=\"cr-icon icofont icofont-ui-check txt-primary\"\n                          ></i\n                        ></span>\n                        <span class=\"text-inverse\">Remember me</span>\n                      </label>\n                    </div>\n                    <div class=\"forgot-phone text-right f-right\">\n                      <a\n                        routerLink=\"/forgot-password\"\n                        class=\"text-right f-w-600 text-inverse\"\n                      >\n                        <i class=\"icofont icofont-lock\"></i> Forgot Password?</a\n                      >\n                    </div>\n                  </div>\n                  <div class=\"m-t-20\">\n                    <button class=\"btn btn-primary btn-md btn-block m-b-10\">\n                      Sign in\n                    </button>\n                    <!-- <hr /> -->\n                    <!-- <p class=\"m-0 text-dark\">Don't have an account <strong><a routerLink=\"/signup\">Sign Up</a></strong></p> -->\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UtilsService } from '../../service/utils.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../service/authentication.service';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  currentUser: string;\n  isLoging: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private utils:UtilsService,\n    private api:AuthenticationService,\n    private router: Router,\n\n    ) { }\n\n  ngOnInit() {\n\n    // this.currentUser=localStorage.getItem('currentUser');\n    // this.isLoging = JSON.parse(this.currentUser);\n    // console.log(this.isLoging);\n    \n\n    // if(this.isLoging != null){\n    //   this.router.navigate(['/home/dashboard']);\n\n    // }\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    // debugger\n    this.submitted = true;\n    // localStorage.clear();\n    if(this.loginForm.invalid) return;\n    let remember_me = $('#remember_me').is(\":checked\");\n    if(remember_me) {\n      this.utils.set('marketplace_admin', this.loginForm.value);\n    } else {\n      this.utils.removeData('marketplace_admin');\n    }\n    // this.loginForm.value.device_type = 3\n    // this.loginForm.value.device_token = \"admin_web\"\n    if(this.loginForm.value.length == 0){\n      return ;\n    }\n    this.api.login(this.loginForm.value).subscribe(\n      data=> {\n        debugger;\n        console.log(data,\"::::::::::::::::::::i am here\")\n        this.utils.set('marketplace_admin', data['response']);\n        this.utils.alert('', 'Admin logged in successfully');\n        this.router.navigate(['/home/dashboard']);\n        localStorage.setItem(\"currentUser\",JSON.stringify(data[\"response\"]))\n      },\n      error=> {\n        console.log(error);\n        \n        this.toastr.error(error.error.message);\n        // this.utils.alert('error', error['error']['message']);\n      }\n    );\n  }\n}","<section class=\"login p-relative d-flex text-center bg-primary common-img-bg\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"login-card card-block auth-body mr-auto ml-auto\">\n                    <div class=\"auth-box\">\n                        <div class=\"text-center mb-3\">\n                            <img src=\"assets/images/dentswiftlogo.png\" alt=\"logo.png\" />\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 m-t-10\">\n                                <form class=\"w-100\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-addon\">\n                      <i class=\"icofont icofont-lock\"></i>\n                    </span>\n                                        <input type=\"password\" placeholder=\"New Password\" formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\" />\n                                        <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.newPassword.errors.required\">New password is required</div>\n                                            <div *ngIf=\"f.newPassword.errors.minlength\">Password must be at least 8 characters</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-addon\">\n                      <i class=\"icofont icofont-lock\"></i>\n                    </span>\n                                        <input type=\"password\" placeholder=\"Confirm New Password\" formControlName=\"confirmNewPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmNewPassword.errors }\" />\n                                        <div *ngIf=\"submitted && f.confirmNewPassword.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.confirmNewPassword.errors.required\">Confirm new password is required</div>\n                                            <div *ngIf=\"f.confirmNewPassword.errors.minlength\">Password must be at least 8 characters</div>\n                                            <div *ngIf=\"f.confirmNewPassword.errors.mustMatch\">Password does not match.</div>\n                                        </div>\n                                    </div>\n                                    <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary btn-md btn-block m-b-10\" data-toggle=\"modal\" data-target=\"#sendbox\">Confirm</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div class=\"modal fade\" id=\"sendbox\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-sm\">\n        <div class=\"modal-content\">\n            <div><i class=\"fa fa-check\" style=\"font-size: 30px;\n          color: green;\" aria-hidden=\"true\"></i></div>\n            <h6 class=\"mt-3\">Password Changed Successfully</h6>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UtilsService } from '../../service/utils.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../service/authentication.service';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  resetForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private utils:UtilsService,\n    private api:AuthenticationService,\n    private router: Router,\n) {\n    \n   }\n\n  ngOnInit() {\n    this.resetForm = this.formBuilder.group({\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\n      confirmNewPassword: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n\n    // debugger;\n\n    this.router.navigateByUrl('/login');\n\n    var admin = JSON.parse(localStorage.getItem('currentUser'));\n\nif(this.resetForm.value.newPassword !== this.resetForm.value.confirmNewPassword){\n  return this.toastr.error(\"Password didn't match\")\n}\n\n  let data = {\n    email:admin.email,\n    newPassword:this.resetForm.value.newPassword\n\n  }\n\n  this.api.reset(data).subscribe((res)=>{\n    console.log(\"::::::::  Password is Reset   :::::::::\");\n  })\n    // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.resetForm.value))\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'reset-password', component: ResetPasswordComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SharedRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedRoutingModule } from './shared-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n"],"sourceRoot":"webpack:///"}