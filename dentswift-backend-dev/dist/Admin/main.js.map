{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/service/auth.guards.ts","./src/app/service/auth.interceptor.ts","./src/app/service/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule , CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AuthGuard } from './service/auth.guards';\n\n\nconst routes: Routes = [\n  { \n    path: '', \n    loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule) \n  }, \n  { \n    path: 'home', \n    loadChildren: () => import('./layout/layout.module').then(m => m.LayoutModule), canActivate : [AuthGuard]\n  },\n  { \n    path: '**', \n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\nschemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>\n<ngx-spinner bdColor = \"rgba(0, 0, 0, 0.9)\" size = \"large\" color = \"#fff\" type = \"square-loader\" [fullScreen] = \"true\"\ntemplate = \"<img src='https://media.giphy.com/media/o8igknyuKs6aY/giphy.gif' />\"><p style=\"color: white; position: relative; top: 5rem;\" > Hey! You have protected your valuable assets </p></ngx-spinner>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'consultation-admin';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AuthInterceptor } from './service/auth.interceptor';\nimport { MatExpansionModule} from '@angular/material/expansion';\n// import { CKEditorModule } from 'ngx-ckeditor';\nimport { MatMenuModule} from '@angular/material/menu';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatExpansionModule,\n    // CKEditorModule,\n    MatMenuModule,\n    AngularEditorModule,\n    NgxSpinnerModule,\n    ToastrModule.forRoot(\n      {positionClass:\"toast-top-right\",\n      preventDuplicates:true}\n    ),\n    // ToastrModule.forRoot(),\n    // GooglePlaceModule\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  providers: [\n    { \n      provide: HTTP_INTERCEPTORS, \n      useClass: AuthInterceptor, \n      multi: true \n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div style=\"display: flex; text-align: center; width: 100%; min-height: 100vh; float: left; align-items: center; justify-content: center;\">\n  <div>\n    <h1 class=\"text-primary\">Page Not Found</h1>\n    <a routerLink=\"/login\" class=\"mt-3 d-inline-block\"><h5>Click Here Go To Home</h5></a>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n// import { AuthenticationService } from './authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        // private authenticationService: AuthenticationService,\n        private authenticationService: AuthService\n\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.isLogin();\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse,\n} from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { environment } from \"../../environments/environment\";\nimport { catchError } from \"rxjs/operators\";\nimport { Routes, Router, ActivatedRoute } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private router: Router) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    let adminData = localStorage.getItem(\"currentUser\");\n    var token;\n    if (adminData && adminData != \"undefined\") {\n      token = JSON.parse(localStorage.getItem(\"currentUser\")).token;\n    } else {\n      token = \"\";\n    }\n    // let url = environment.baseUrl;\n    let url = \"\";\n\n    url = req.url;\n\n    // console.log(url);\n    // debugger;\n\n    const copiedReq = req.clone({\n      headers: req.headers.append(\"access_token\", token),\n      url: url,\n    });\n    // console.log(token);\n    // console.log(copiedReq);\n\n    return next.handle(copiedReq).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.error && error.error.message == \"Invalid access token.\") {\n          localStorage.removeItem(\"currentUser\");\n          this.router.navigate([\"/login\"]);\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private router: Router) { }\n\n    isLoggedIn() {\n        var token = window.localStorage.getItem('bitetat_admin_data');\n        if (token) return true;\n        else return false;\n    }\n\n    isLogin() {\n        var token;\n        var remembered = localStorage.getItem(\"currentUser\");\n        if (remembered == undefined) {\n          token = sessionStorage.getItem(\"currentUser\");\n        } else {\n          token = localStorage.getItem(\"currentUser\");\n        }\n    \n        if (token) return true;\n        else false;\n      }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // baseUrl:'http://127.0.0.1:8000'\n  // baseUrl: 'http://15.222.189.155',\n  // baseUrl:'https://django.verifiedmarketplace.io',\n  // baseUrl: 'http://15.184.116.154:3000/',\n  baseUrl: 'https://app.dentswift.com/',\n\n  //  baseUrl: 'http://localhost:4200/',\n  // sellerUrl: 'http://18.134.113.236:3000/seller/',\n  // userUrl: 'http://18.134.113.236:3000/user/',\n  \n   firebaseConfig : {\n    apiKey: \"AIzaSyAFywiZ6h3CBs_XDZedH3fb82RPYlRyAME\",\n    authDomain: \"dentswift.firebaseapp.com\",\n    databaseURL: \"https://dentswift-default-rtdb.firebaseio.com\",\n    projectId: \"dentswift\",\n    storageBucket: \"dentswift.appspot.com\",\n    messagingSenderId: \"368305474663\",\n    appId: \"1:368305474663:web:c5b5f22eb11914381a58c2\",\n    measurementId: \"G-LBX4MM9BK5\"\n  }\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}